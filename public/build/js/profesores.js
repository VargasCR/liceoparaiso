let profesores=[];function queryStringToObject(e){const n=new URLSearchParams(e),t={};for(const[e,o]of n)t[e]=o;return t}function findParamAlert(){try{const e=queryStringToObject(window.location.search);if(0!==Object.keys(e).length){switch(e.code){case"1":Swal.fire({icon:"success",title:"Agregado",text:"El profesor se ha agregado correctamente"}).then(e=>{let n=new URL(window.location.href);n.searchParams.delete("code");const t=n.toString();window.location.replace(t)})}}}catch{}}async function encontrarProfesores(){try{const e="/api/find-teacher",n=await fetch(e,{method:"GET"}),t=await n.json(),o=document.querySelector("#item-container");let r="";t.forEach(e=>{r+=`\n        <div class="public-student-container">\n        <div class="public-student">\n        <div class="public-student-image-container">\n              <img src="/build/img/pictures/${e.id}p.jpg" alt="">\n            </div>\n            <div class="public-student-info">\n              <h4>${e.nombre} ${e.apellido}</h4>\n              <p>Cédula: ${e.dni}</p>\n              <p>Especialidades: ${e.materias}</p>\n              <div class="btn-edit-student">\n                <a class="btn-student btn-edit" href="/dashboard-teacher-edit?id=${e.id}">\n                  <img src="/build/img/edit-student.svg" class="btn-student-ico" alt="Icono">\n                </a>\n                <button class="btn-student btn-delete" onclick="showconfirmremoveTeacher(${e.id}); event.stopPropagation()">\n                  <img src="/build/img/delete-student.svg" class="btn-student-ico" alt="Icono">\n                </button>\n              </div>\n  \n           \n            \n            </div>\n          </div>\n        </div>\n        `}),o.innerHTML=r}catch(e){}}function showconfirmremoveTeacher(e){Swal.fire({title:"¿Seguro que desea borrar?",text:"Una vez borrado, no se podrá revertir.",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Sí, borrarlo."}).then(n=>{if(n.isConfirmed){eliminarProfesor(e).then(e=>{e?(Swal.fire("ELIMINADO","Se ha eliminado correctamente.","success").then(()=>{location.reload()}),l):Swal.fire("Error","Algo ha ocurrido, intentelo nuevamente","error")})}})}async function eliminarProfesor(e){const n=new FormData;n.append("id",e);try{const e="/api/delete-teacher-selected",t=await fetch(e,{method:"POST",body:n});return await t.json()}catch(e){console.log(e)}}encontrarProfesores();